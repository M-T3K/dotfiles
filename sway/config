# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

# Startup Script

exec ~/.config/sway/scripts/startup.sh

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l


# Modified Dvorak has differen 0-9 keys, so we adapt

set $Key_One +
set $Key_Two [
set $Key_Three {
set $Key_Four (
set $Key_Five &
set $Key_Six =
set $Key_Seven )
set $Key_Eight }
set $Key_Nine ]
set $Key_Zero *


# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# @info This is a helper script needed because it checks if albert is already running
# outside of swaywm because then it wouldn't run things inside sway.
set $launcher albert toggle | xargs swaymsg exec --

include /etc/sway/config-vars.d/*

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg ~/Pictures/Wallpapers/1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

output WL-1 {
  resolution 1920x1080
}

set $laptop WL-1 
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable

input "1267:12521:ELAN1200:00_04F3:30E9_Touchpad" {
        dwt enabled
        tap enabled
        natural_scroll enabled
        click_method clickfinger
        scroll_method two_finger
        middle_emulation enabled
}



### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# Custom Dvorak Keyboard
input "type:keyboard" xkb_layout "rpd"

## Appearance

for_window [class=".*"] {
    border none
    default_border none
}
### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $launcher

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # This will be so much fun if I ever change keyboards lol 
    # Switch to workspace
    bindsym $mod+plus workspace number 1
    bindsym $mod+bracketleft workspace number 2
    bindsym $mod+braceleft workspace number 3
    bindsym $mod+parenleft workspace number 4
    bindsym $mod+ampersand workspace number 5
    bindsym $mod+equal workspace number 6
    bindsym $mod+parenright workspace number 7
    bindsym $mod+braceright workspace number 8
    bindsym $mod+bracketright workspace number 9
    bindsym $mod+asterisk workspace number 10
    # Move focused container to workspace
    bindsym $mod+1 move container to workspace number 1
    bindsym $mod+2 move container to workspace number 2
    bindsym $mod+3 move container to workspace number 3
    bindsym $mod+4 move container to workspace number 4
    bindsym $mod+5 move container to workspace number 5
    bindsym $mod+6 move container to workspace number 6
    bindsym $mod+7 move container to workspace number 7
    bindsym $mod+8 move container to workspace number 8
    bindsym $mod+9 move container to workspace number 9
    bindsym $mod+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

#
# Touchpad Gestures
#

# Swipe Gestures

################################
# 3-FINGER SWIPES → FOCUS DIRECTION
################################
bindgesture swipe:3:left focus left
bindgesture swipe:3:right focus right
bindgesture swipe:3:up focus up
bindgesture swipe:3:down focus down

################################
# 4-FINGER SWIPES
################################
# Swipe left/right → cycle workspaces
bindgesture swipe:4:left workspace prev
bindgesture swipe:4:right workspace next

# Swipe down → close (kill) current app
bindgesture swipe:4:down kill

# Swipe up → move the current app to the scratchpad
bindgesture swipe:4:up move scratchpad

################################
# 5-FINGER SWIPES
################################
# Swipe up → launch Albert
bindgesture swipe:5:up exec albert toggle

# Swipe down → lock the screen
bindgesture swipe:5:down exec swaylock


bindgesture swipe:5:left move container to workspace prev
bindgesture swipe:5:right move container to workspace next 

bindgesture pinch:2:inward exec "swaymsg output * scale 1.5"
bindgesture pinch:2:outward exec "swaymsg output * scale 1.0" 

bindgesture pinch:4:inward scratchpad show

## Asus WMI Keys:

# Volume keys
bindsym XF86AudioLowerVolume exec pamixer --decrease 5
bindsym XF86AudioRaiseVolume exec pamixer --increase 5
# Unsure if this works
bindsym XF86AudioMicMute exec amixer set Capture toggle
bindsym XF86Launch1 exec albert toggle &

# Key on fn function to increase brightness and so on
bindsym XF86AudioMute exec pamixer --toggle-mute
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next

# Custom Launch Key (XF86Launch4) – example: open a terminal
bindsym XF86Launch4 exec alacritty

# Turn displays off (DPMS). Move mouse or press a key to wake them up
bindsym XF86DisplayOff exec swaymsg "output * dpms off"
bindsym XF86MonBrightnessDown exec sudo brightnessctl set 10%-
bindsym XF86MonBrightnessUp exec sudo brightnessctl set +10%

# Mic mute toggle
# bindsym KEY_MICMUTE exec pamixer --default-source --toggle-mute

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.

bar swaybar_command waybar

include /etc/sway/config.d/*
